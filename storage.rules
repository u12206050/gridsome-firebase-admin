service firebase.storage {
  match /b/{bucket}/o {
    match /{userId} {
      match /images/{fileName} {
        // Only people that are logged in can view uploaded images
        allow read: if request.auth != null;

        // Only allow specified user to upload to this directory
        // Images must be of content-type "image/*"
        allow create: if request.auth.uid == userId && request.resource.contentType.matches('image/.+');

        allow delete: if request.auth.uid == userId || userIsAdmin()
      }
      match /private/{fileName} {
        // Only allow specified user to view and upload files in this directory
        allow read, write: if request.auth.uid == userId || userIsAdmin()
      }
    }
    // Role Fn

    function userIsAdmin() {
      return userHasAnyRole(['superadmin', 'admin'])
    }

    function userIsSuper() {
      return userHasRole('superadmin')
    }

    function userHasRole(role) {
      return isSignedIn() && request.auth.token[role] == true
    }

    function userHasAnyRole(roles) {
      return isSignedIn() && request.auth.token.keys().hasAny(roles)
    }

    function userHasAllRoles(roles) {
      return isSignedIn() && request.auth.token.keys().hasAll(roles)
    }
  }
}
